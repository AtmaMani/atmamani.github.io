<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Atma's blog (Posts about design)</title><link>https://atmamani.github.io/</link><description></description><atom:link href="https://atmamani.github.io/categories/cat_design.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:atma.mani@outlook.com"&gt;Atma Mani&lt;/a&gt; </copyright><lastBuildDate>Tue, 16 Jun 2020 22:39:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Design principles behind RESTful APIs</title><link>https://atmamani.github.io/blog/design-principles-behind-restful-apis/</link><dc:creator>Atma Mani</dc:creator><description>&lt;div&gt;&lt;p&gt;RESTful stands for "Representational State Transfer". Consider this as a concept and a pattern of building client-server APIs. I have been building Python APIs that consume some popular RESTful APIs for the past 5+ years. This article outlines the aspects of a thoughtful and well-designed REST API. Some of the aspects here are from the perspective of a consumer, not the maker of RESTful APIs.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://atmamani.github.io/blog/design-principles-behind-restful-apis/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>https://atmamani.github.io/blog/design-principles-behind-restful-apis/</guid><pubDate>Tue, 15 Oct 2019 17:25:00 GMT</pubDate></item></channel></rss>